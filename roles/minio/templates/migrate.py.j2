import pandas as pd
import requests
import json
from datetime import datetime, timedelta
from multiprocessing import Pool

base = 'https://iss.moex.com/iss/engines/stock/markets/shares/securities/YNDX/candles.json'
def request(start,stop,base):
    response = requests.get(f'{base}?from={start}')
    response = json.loads(response.content)['candles']
    data = response["data"]
    yield data
    if (temp:=data[-1][-1].split()[0]) != stop and temp != start:
        yield from request(temp,stop,base)

def column(base):
    response = requests.get(f'{base}?from=2024-01-01')
    response = json.loads(response.content)['candles']
    return response['columns']

def make_csv():
    start = '2014-01-01'
    stop = datetime.today().strftime('%Y-%m-%d')
    data = request(start,stop,base)

    df = make_df(next(data))

    with Pool(32) as p:
        for i in p.map(make_df, data):
            df = pd.concat([df,i]).drop_duplicates().reset_index(drop=True)
    csv = df.to_csv(index=False).encode("utf-8")
    return csv

def make_df(data):
    columns = column(base)
    return pd.DataFrame(data = data, columns = columns)


def dump_data_to_bucket(csv):

    from minio import Minio
    from io import BytesIO

    client = Minio("minio.com", access_key="{{ MINIO_ROOT_USER }}", secret_key='{{ MINIO_ROOT_PASSWORD }}', secure=False)

    client.put_object('{{ MINIO_BUCKET_NAME }}', "start_yandex2.csv", data=BytesIO(csv), length=len(csv), content_type="application/csv")
    client.put_object('{{ MINIO_SECOND_BUCKET_NAME }}', "start_yandex2.csv", data=BytesIO(csv), length=len(csv), content_type="application/csv")

dump_data_to_bucket(make_csv())