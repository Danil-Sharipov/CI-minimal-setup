---
- stat:
    path: '{{ systemd_dir }}/k3s.service'
  register: check
- name: 'Download k3s binary'
  when: check.stat.exists == False
  shell:
    cmd: /usr/local/bin/k3s-install.sh
  environment:
    INSTALL_K3S_SKIP_START: "true"
  changed_when: true

- name: 'Init cluster'
  register: marker
  template:
    src: k3s.service.j2
    dest: '{{ systemd_dir }}/k3s.service'
    owner: root
    group: root
    mode: 0644
    force: true
- name: Enable and check K3s service
  systemd:
    name: k3s
    daemon_reload: "{{ true if marker.changed else false}}"
    state: "{{ 'restarted' if marker.changed else 'started' }}"
    enabled: true

- name: 'Check if exists'
  stat:
    path: /usr/local/bin/helm
  register: check
- name: 'Helm install'
  when: check.stat.exists == False
  block:
    - name: 'Create temporary file'
      tempfile:
        state: directory
        suffix: tmp
      register: tmp_dir
    - name: "Download and extract helm"
      unarchive:
        src: "https://get.helm.sh/helm-v{{ helm_version }}-linux-amd64.tar.gz"
        dest: "{{ tmp_dir.path }}"
        remote_src: yes
    - name: 'Get name of user'
      become: false
      command: whoami
      register: user
    - name: 'Move helm to bin'
      copy:
        src: "{{ tmp_dir.path }}/linux-amd64/helm"
        dest: /usr/local/bin
        mode: 0755
        remote_src: yes
        owner: '{{ user.stdout }}'
        group: '{{ user.stdout }}'

    - name: 'Remove unnecessary file'
      file:
        state: absent
        path: '{{ tmp_dir.path }}'

- name: 'Copy file'
  copy:
    src: ingress.yaml
    dest: /tmp/ing.yaml
- name: 'Apply manifest to the cluster'
  kubernetes.core.k8s:
    state: present
    src: /tmp/ing.yaml
  environment:
    KUBECONFIG: /etc/rancher/k3s/k3s.yaml
- file:
    state: absent
    path: /tmp/ing.yml


#- name: 'Get info'
#  kubernetes.core.k8s_info:
#    api_version: helm.cattle.io/v1
#    kind: HelmChartConfig
#    name: traefik
#    namespace: kube-system
#  environment:
#    KUBECONFIG: /etc/rancher/k3s/k3s.yaml
#  register: check
#- debug:
#    msg: '{{ check }}'
